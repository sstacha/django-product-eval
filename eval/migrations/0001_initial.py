# Generated by Django 3.2.6 on 2021-08-27 15:08

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import docrootcms.models
import tagulous.models.fields
import tagulous.models.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='FunctionalityCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField()),
                ('count', models.IntegerField(default=0, help_text='Internal counter of how many times this tag is in use')),
                ('protected', models.BooleanField(default=False, help_text='Will not be deleted when the count reaches 0')),
                ('path', models.TextField()),
                ('label', models.CharField(help_text='The name of the tag, without ancestors', max_length=255)),
                ('level', models.IntegerField(default=1, help_text='The level of the tag in the tree')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='eval.functionalitycategory')),
            ],
            options={
                'verbose_name_plural': 'Functionality categories',
            },
            bases=(tagulous.models.models.BaseTagTreeModel, models.Model),
        ),
        migrations.CreateModel(
            name='PriorityCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField()),
                ('count', models.IntegerField(default=0, help_text='Internal counter of how many times this tag is in use')),
                ('protected', models.BooleanField(default=False, help_text='Will not be deleted when the count reaches 0')),
                ('path', models.TextField()),
                ('label', models.CharField(help_text='The name of the tag, without ancestors', max_length=255)),
                ('level', models.IntegerField(default=1, help_text='The level of the tag in the tree')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='eval.prioritycategory')),
            ],
            options={
                'verbose_name_plural': 'Priority categories',
            },
            bases=(tagulous.models.models.BaseTagTreeModel, models.Model),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=16)),
                ('name', models.CharField(max_length=255)),
                ('notes', models.CharField(blank=True, max_length=500, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['is_active', '-name'],
            },
        ),
        migrations.CreateModel(
            name='ProjectVendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('notes', models.TextField(blank=True, max_length=1200, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eval.project')),
            ],
            options={
                'ordering': ['is_active', '-name'],
            },
        ),
        migrations.CreateModel(
            name='ProjectFunctionality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('functionality', models.CharField(max_length=400)),
                ('order', models.PositiveIntegerField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, max_length=500, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('categories', tagulous.models.fields.TagField(_set_tag_meta=True, blank=True, force_lowercase=True, help_text="Splits on commas and spaces;  hierarchy is defined by paths.  Ex: 'user/basic' 'user/advanced' 'staff/basic'", to='eval.FunctionalityCategory', tree=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='Leave blank for everyone', to='auth.Group', verbose_name='Applies to')),
                ('priorities', tagulous.models.fields.TagField(_set_tag_meta=True, blank=True, force_lowercase=True, help_text="Splits on commas and spaces;  hierarchy is defined by paths.  Ex: 'large/must-have' 'small/must-have' 'large/like-to-have'", to='eval.PriorityCategory', tree=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eval.project')),
            ],
            options={
                'verbose_name': 'Project requirement',
                'ordering': ['project', 'order', 'functionality'],
            },
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percent_met', models.PositiveSmallIntegerField(blank=True, default=None, help_text='The percentage functionality is met in your opinion (0-100)', null=True, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('confirmed', models.BooleanField(default=False, help_text='Have you actually seen this or reading documentation saying it exists')),
                ('notes', docrootcms.models.ContentMarkdownField(blank=True, help_text='Markdown Reference: <a href="https://commonmark.org/help/">https://commonmark.org/help/</a>', null=True)),
                ('functionality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eval.projectfunctionality')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eval.projectvendor')),
            ],
            options={
                'ordering': ['vendor', 'functionality', 'user'],
            },
        ),
    ]
